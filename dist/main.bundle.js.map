{"version":3,"sources":["./src/$_gendir lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/approve-survey/approve-survey.component.css","./src/app/approve-survey/approve-survey.component.html","./src/app/approve-survey/approve-survey.component.ts","./src/app/gmaps/gmaps.component.css","./src/app/gmaps/gmaps.component.html","./src/app/gmaps/gmaps.component.ts","./src/app/guards/auth-guard.ts","./src/app/layout-application/layout-application.component.css","./src/app/layout-application/layout-application.component.html","./src/app/layout-application/layout-application.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/models/LandRecord.ts","./src/app/services/login-authentication.service.ts","./src/app/services/managelandrecords.service.ts","./src/app/services/survey-data.service.ts","./src/app/show-validation-error/show-validation-error.component.css","./src/app/show-validation-error/show-validation-error.component.html","./src/app/show-validation-error/show-validation-error.component.ts","./src/app/view-land-record/view-land-record.component.css","./src/app/view-land-record/view-land-record.component.html","./src/app/view-land-record/view-land-record.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir lazy\n// module id = ./src/$$_gendir lazy recursive\n// module chunks = main","import {LayoutApplicationComponent  } from './layout-application/layout-application.component';\r\nimport {ApproveSurveyComponent} from \"./approve-survey/approve-survey.component\";\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {NgModule } from '@angular/core';\r\nimport {Routes, RouterModule } from '@angular/router';\r\nimport {ViewlandrecordComponent } from './view-land-record/view-land-record.component';\r\nimport {AuthGuard} from './guards/auth-guard';\r\n\r\nconst routes: Routes = [\r\n  { path: 'layoutApplication', component: LayoutApplicationComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'approveSurveys', component: ApproveSurveyComponent,canActivate: [AuthGuard] },\r\n  { path: 'viewLandRecord/:id', component: ViewlandrecordComponent,canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: '/login',pathMatch:'full'},\r\n  { path: '**', pathMatch:'full', redirectTo: '/login'}\r\n] \r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \" /*to be done */\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!-- This would embed the container class of bootstrap-->\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AgmCoreModule } from '@agm/core';\n\nimport { AppComponent } from './app.component';\nimport { ShowValidationErrorComponent } from './show-validation-error/show-validation-error.component';\nimport { LayoutApplicationComponent } from './layout-application/layout-application.component';\n\nimport { SurveyDataService } from './services/survey-data.service';\nimport { ManageLandRecordsService } from './services/managelandrecords.service'\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ApproveSurveyComponent } from './approve-survey/approve-survey.component';\nimport { GmapsComponent } from './gmaps/gmaps.component';\nimport { LoginComponent } from './login/login.component';\nimport { ViewlandrecordComponent } from './view-land-record/view-land-record.component';\nimport { AuthGuard } from './guards/auth-guard';\nimport { LoginAuthenticationService } from './services/login-authentication.service';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ShowValidationErrorComponent,\n    LayoutApplicationComponent,\n    ApproveSurveyComponent,\n    GmapsComponent,\n    LoginComponent,\n    ViewlandrecordComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyCSIFuXPQXel1splGkx5ElXoU1bL60Jn-I' //credentials for Angular google maps\n    }), \n    AppRoutingModule\n    \n  ],\n  providers: [SurveyDataService,ManageLandRecordsService,AuthGuard,LoginAuthenticationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/approve-survey/approve-survey.component.css\n// module id = ./src/app/approve-survey/approve-survey.component.css\n// module chunks = main","module.exports = \"<div  align=\\\"center\\\">\\n    <h3>MOJANI- Approve Survey Appplications</h3>\\n  </div>\\n <div *ngIf=\\\"approveSuccess; then successMsg else approveForm\\\" ></div>\\n   <ng-template #approveForm>\\n  <div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <h1 class=\\\"panel-title\\\">Search Criteria</h1>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <label for=\\\"wardNo\\\" class=\\\"control-label required\\\">Ward #</label>\\n        <input type=\\\"text\\\" id=\\\"wardNo\\\" name=\\\"wardNo\\\"  [(ngModel)]=\\\"wardNo\\\"  />\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)= \\\"search()\\\">Search</button>\\n      </div>\\n    </div>\\n    </div>  \\n    </div>\\n<!--Search results of the land records for approval -->\\n<div *ngIf= \\\"fetchComplete\\\" >\\n<table class=\\\"table table-striped\\\">\\n  <thead>\\n      <tr>\\n          <th>Property ID</th>\\n          <th>Ward No</th>\\n          <th>Area Code</th>\\n          <th>Site No</th>\\n          <th>Total Area</th>\\n          <th>Approve</th>\\n      </tr>\\n  </thead>\\n  <tbody>\\n      <tr *ngFor=\\\"let land of landRecords\\\">\\n          <td><a [routerLink] = \\\"['/viewLandRecord', land.pid]\\\">{{land.pid}}</a></td>\\n          <td>{{land.wardNo}}</td>\\n          <td>{{land.areaCode}}</td>\\n          <td>{{land.siteNo}}</td>\\n          <td>{{land.geoData.totalArea}}</td>\\n         <td><input type=\\\"checkbox\\\" name='approval'  [(ngModel)]='land.isMojaniApproved'  #approval=\\\"ngModel\\\" /></td>\\n      </tr>\\n  </tbody>\\n</table> \\n<div *ngIf='noSearchResults' style='color:red;' align='center'><strong>No matching results found !</strong></div>\\n<div *ngIf='!noSearchResults' align='right'>\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)= \\\"onSubmit()\\\">Approve</button>\\n</div>\\n</div>\\n</ng-template>\\n<!--Success message for the approval-->\\n<ng-template #successMsg >\\n<div class=\\\"alert alert-success\\\"> <strong>Success!</strong>\\nAll the below approved records have been committed to the HyperLedger. Their unique digital Ids are listed below :\\n<ul *ngFor= \\\"let rec of approvedRecords\\\">\\n  <li>{{rec.pid}}</li>\\n</ul>\\n</div>\\n  <div class=\\\"alert alert-info\\\">\\n    Please click on <strong>OK</strong> to approve other applications !\\n  </div>\\n  <div align=\\\"center\\\"><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitNew()\\\">OK</button></div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/approve-survey/approve-survey.component.html\n// module id = ./src/app/approve-survey/approve-survey.component.html\n// module chunks = main","import { Component, OnInit,NgModule } from '@angular/core';\nimport { LandRecord } from '../models/LandRecord';\nimport { ManageLandRecordsService } from '../services/managelandrecords.service';\nimport { Observable } from 'rxjs';\nimport { SurveyDataService } from \"../services/survey-data.service\";\n\n@Component({\n  selector: 'app-approve-survey',\n  templateUrl: './approve-survey.component.html',\n  styleUrls: ['./approve-survey.component.css']\n})\nexport class ApproveSurveyComponent implements OnInit {\n  approveSuccess : boolean = false;\n  landRecords : LandRecord[];\n  approvedRecords : LandRecord[];\n  wardNo : number;\n  fetchComplete : boolean = false;\n  noSearchResults : boolean = false;\n  \n  constructor(private manageLandRecordsService : ManageLandRecordsService, private surveyData : SurveyDataService) {\n   }\n\n  ngOnInit() {\n    this.surveyData.currentData.subscribe(records => this.landRecords = records);\n    if(this.landRecords!=null && this.landRecords.length > 0){\n               this.fetchComplete = true;\n               this.noSearchResults= false;\n    }\n  }\n\n  onSubmit(){\n    console.log(\"ApplicationData\" + JSON.stringify(this.landRecords));\n    \n    //TBD - To add records to block chain\n    this.approvedRecords =  this.landRecords.filter(\n    (rec) => rec.isMojaniApproved);\n    this.manageLandRecordsService.updateMojaniApprovedRecords(this.approvedRecords)\n    .subscribe(\n      response => {\n        console.log(\"res received updateLandrecordMojani service\" + JSON.stringify(response));\n        if (response !=null && response.success) {\n          //  this.router.navigate(['/success', this.landRecord.pid]);\n          this.approveSuccess = true; \n        }   \n      });\n    \n  }\n\n  submitNew(){\n        this.landRecords = [];\n        this.approveSuccess= false;\n        this.wardNo = null;\n        this.fetchComplete = false;\n  }\n\n  search(){\n    console.log(\"ward No :\" + this.wardNo);\n    this.manageLandRecordsService.getLandRecordsMojaniByWard(this.wardNo)\n    .subscribe(\n      response => {\n            console.log(\"res received from getLandRecords service\" + JSON.stringify(response));\n            if (response !=null) {\n              //  this.router.navigate(['/success', this.landRecord.pid]);\n              this.landRecords = <LandRecord[]> response.landRecords;\n             if(this.landRecords!=null && this.landRecords.length > 0){\n               this.noSearchResults= true;\n             }else{\n               this.noSearchResults = false;\n             }\n              this.fetchComplete = true;     \n              this.surveyData.updateData(this.landRecords);\n            }\n          });\n  }\n\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/approve-survey/approve-survey.component.ts","module.exports = \"\\r\\nagm-map {\\r\\n  height: 200px;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/gmaps/gmaps.component.css\n// module id = ./src/app/gmaps/gmaps.component.css\n// module chunks = main","module.exports = \"\\n<agm-map \\n  [latitude]=\\\"lat\\\"\\n  [longitude]=\\\"lng\\\"\\n  [zoom]=\\\"16\\\"\\n  [disableDefaultUI]=\\\"true\\\"\\n  [zoomControl]=\\\"true\\\">\\n\\n  <agm-marker \\n      [latitude]=\\\"lat\\\"\\n      [longitude]=\\\"lng\\\"\\n      [label]=\\\"\\\"\\n      [markerDraggable]=\\\"false\\\">\\n  </agm-marker>\\n</agm-map>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/gmaps/gmaps.component.html\n// module id = ./src/app/gmaps/gmaps.component.html\n// module chunks = main","import { Component, OnInit,Input } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-gmaps',\n  templateUrl: './gmaps.component.html',\n  styleUrls: ['./gmaps.component.css']\n})\nexport class GmapsComponent implements OnInit {\n  @Input() lat:number;\n  @Input() lng:number;\n  constructor(){\n  }\n  ngOnInit() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/gmaps/gmaps.component.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router :Router) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (localStorage.getItem('currentUser')) {\n        // logged in so return true\n        return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/auth-guard.ts","module.exports = \".required:after {\\r\\n  content: \\\" *\\\";\\r\\n  color : red;\\r\\n}\\r\\n\\r\\n\\r\\nagm-map {\\r\\n  height: 300px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout-application/layout-application.component.css\n// module id = ./src/app/layout-application/layout-application.component.css\n// module chunks = main","module.exports = \"<div  align=\\\"center\\\">\\r\\n  <h3>MOJANI - Application for Land Survey</h3>\\r\\n</div>\\r\\n<div *ngIf =\\\"!submitSuccess;then applicationForm else applicationSuccess\\\"></div>\\r\\n\\r\\n<ng-template #applicationForm>\\r\\n<div class=\\\"applicationForm\\\">\\r\\n  <form class=\\\"form-horizontal\\\" [formGroup]=\\\"layoutForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"panel-title\\\">Land Details</h1>\\r\\n      </div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('wardNo')\\\">\\r\\n            <label for=\\\"wardNo\\\" class=\\\"control-label required\\\">Ward #</label>\\r\\n            <input type=\\\"text\\\" id=\\\"wardNo\\\" class=\\\"form-control\\\" formControlName=\\\"wardNo\\\" />\\r\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('wardNo')\\\" errorMsg=\\\"Ward # is mandatory\\\"></app-show-validation-error>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('areaCode')\\\">\\r\\n            <label for=\\\"areaCode\\\" class=\\\"control-label required\\\">Area Code</label>\\r\\n            <input type=\\\"text\\\" id=\\\"areaCode\\\" class=\\\"form-control\\\" formControlName=\\\"areaCode\\\" />\\r\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('areaCode')\\\" errorMsg=\\\"Area code is mandatory\\\"></app-show-validation-error>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('siteNo')\\\">\\r\\n            <label for=\\\"siteNo\\\" class=\\\"control-label required\\\">Plot/Site #</label>\\r\\n            <input type=\\\"text\\\" id=\\\"siteNo\\\" class=\\\"form-control\\\" formControlName=\\\"siteNo\\\" />\\r\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('siteNo')\\\" errorMsg=\\\"Plot/Site # is mandatory\\\"></app-show-validation-error>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"panel-title\\\">Geographic Data</h1>\\r\\n      </div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <div formGroupName=\\\"geoData\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.latitude')\\\">\\r\\n              <label for=\\\"latitude\\\" class=\\\"control-label required\\\">Latitude</label>\\r\\n              <input type=\\\"text\\\" id=\\\"latitude\\\" class=\\\"form-control\\\" formControlName=\\\"latitude\\\" (change)=\\\"setGeoCordinates()\\\" />\\r\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.latitude')\\\" errorMsg=\\\"Latitude is mandatory\\\"></app-show-validation-error>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.longitude')\\\">\\r\\n              <label for=\\\"Longitude\\\" class=\\\"control-label required\\\">Longitude</label>\\r\\n              <input type=\\\"text\\\" id=\\\"longitude\\\" class=\\\"form-control\\\" formControlName=\\\"longitude\\\" (change)=\\\"setGeoCordinates()\\\" />\\r\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.longitude')\\\" errorMsg=\\\"Longitude is mandatory\\\"></app-show-validation-error>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.length')\\\">\\r\\n              <label for=\\\"length\\\" class=\\\"control-label required\\\">Plot Length (ft.)</label>\\r\\n              <input type=\\\"text\\\" id=\\\"length\\\" class=\\\"form-control\\\" formControlName=\\\"length\\\" (change) = \\\"calculateTotalArea()\\\" />\\r\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.length')\\\" errorMsg=\\\"Plot length is mandatory\\\"></app-show-validation-error>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.width')\\\">\\r\\n              <label for=\\\"width\\\" class=\\\"control-label required\\\">Plot Width (ft.)</label>\\r\\n              <input type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\" formControlName=\\\"width\\\" (change) = \\\"calculateTotalArea()\\\" />\\r\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.width')\\\" errorMsg=\\\"Plot width is mandatory\\\"></app-show-validation-error>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <label for=\\\"width\\\" class=\\\"control-label\\\">Total Plot Area (sq. ft.)</label>\\r\\n              <input type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\" formControlName=\\\"totalArea\\\" readonly />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-12\\\" [ngClass]=\\\"displayFieldCss('geoData.address')\\\">\\r\\n              <label for=\\\"address\\\" class=\\\"control-label required\\\">Property Address</label>\\r\\n              <input type=\\\"text\\\" id=\\\"address\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\r\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.address')\\\" errorMsg=\\\"Plot address is mandatory\\\"></app-show-validation-error>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\" *ngIf=\\\"lat && long\\\">\\r\\n          <app-gmaps [lat]=\\\"lat\\\"  [lng]=\\\"long\\\"></app-gmaps>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"panel-title\\\">Upload Land Sketch</h1>\\r\\n      </div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('preMutationSketch')\\\">\\r\\n            <label for=\\\"sketch\\\" class=\\\"control-label required\\\">Property Sketch</label>\\r\\n            <input type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" placeholder=\\\"Upload file\\\" accept=\\\"image/*\\\" id=\\\"sketch\\\" formControlName=\\\"preMutationSketch\\\">\\r\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('preMutationSketch')\\\" errorMsg=\\\"Premutation sketch is mandatory\\\"></app-show-validation-error>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h1 class=\\\"panel-title\\\">Land Allottee Details</h1>\\r\\n      </div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <div formGroupName=\\\"ownerDetails\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.ownerName')\\\">\\r\\n              <label for=\\\"ownerName\\\" class=\\\"control-label required\\\">Allottee Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ownerName\\\" formControlName=\\\"ownerName\\\">\\r\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.ownerName')\\\" errorMsg=\\\"Property allotee Name is mandatory\\\"></app-show-validation-error>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.aadharNo')\\\">\\r\\n              <label for=\\\"aadharNo\\\" class=\\\"control-label required\\\">Aadhar #</label>\\r\\n              <input type=\\\"text\\\" id=\\\"aadharNo\\\" class=\\\"form-control\\\" formControlName=\\\"aadharNo\\\" />\\r\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.aadharNo')\\\" errorMsg=\\\"Aadhar # is mandatory\\\"></app-show-validation-error>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.gender')\\\">\\r\\n             <div> <label class=\\\"control-label required\\\">Gender</label></div>\\r\\n              <label class=\\\"md-check radio-inline\\\">\\r\\n                <input type=\\\"radio\\\" value=\\\"M\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">Male\\r\\n              </label>\\r\\n              <label class=\\\"md-check radio-inline\\\">\\r\\n                <input type=\\\"radio\\\" value=\\\"F\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">Female\\r\\n              </label>\\r\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.gender')\\\" errorMsg=\\\"Gender is mandatory\\\"></app-show-validation-error>\\r\\n            </div>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.mobileNo')\\\">\\r\\n                  <label for=\\\"mobileNo\\\" class=\\\"control-label required\\\">Mobile</label>\\r\\n                  <input type=\\\"text\\\" id=\\\"mobileNo\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNo\\\" />\\r\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.mobileNo')\\\" errorMsg=\\\"Mobile number is mandatory\\\"></app-show-validation-error>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.emailID')\\\">\\r\\n                  <label for=\\\"emailID\\\" class=\\\"control-label required\\\">Email ID</label>\\r\\n                  <input type=\\\"text\\\" id=\\\"emailID\\\" class=\\\"form-control\\\" formControlName=\\\"emailID\\\" />\\r\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.emailID')\\\" errorMsg=\\\"Email ID is mandatory\\\"></app-show-validation-error>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-md-12\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.address')\\\">\\r\\n                  <label for=\\\"ownerAddress\\\" class=\\\"control-label required\\\">Allottee Address</label>\\r\\n                  <input type=\\\"text\\\" id=\\\"ownerAddress\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\r\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.address')\\\" errorMsg=\\\"Allotee address is mandatory\\\"></app-show-validation-error>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n    </div>\\r\\n\\r\\n    <div align=\\\"right\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #applicationSuccess>\\r\\n  <div class=\\\"alert alert-success\\\"> <strong>Success!</strong>Application has been submitted successfully ! The digital Idenfication number for this record is <strong>{{landRecord.pid}}</strong></div>\\r\\n  <div class=\\\"alert alert-info\\\">\\r\\n    Please click on <strong>Submit New</strong> to submit another application !\\r\\n  </div>\\r\\n  <div align=\\\"center\\\"><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitNew()\\\">Submit New</button></div>\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout-application/layout-application.component.html\n// module id = ./src/app/layout-application/layout-application.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\nimport { ManageLandRecordsService } from '../services/managelandrecords.service';\r\nimport { Router } from '@angular/router';\r\nimport { LandRecord } from '../models/LandRecord';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-layout-application',\r\n  templateUrl: './layout-application.component.html',\r\n  styleUrls: ['./layout-application.component.css']\r\n})\r\nexport class LayoutApplicationComponent implements OnInit {\r\n  layoutForm: FormGroup;\r\n  landRecord: LandRecord = new LandRecord(); //initialize land record object\r\n  submitSuccess: boolean = false;\r\n  lat :number;\r\n  long : number; \r\n constructor(private formBuilder: FormBuilder, private manageLandRecordsService: ManageLandRecordsService) { }\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.submitSuccess = false;\r\n    this.lat=null;\r\n    this.long = null;\r\n    this.layoutForm = this.formBuilder.group({\r\n      pid: [''],\r\n      wardNo: [null, Validators.required],\r\n      areaCode: [null, Validators.required],\r\n      siteNo: [null, Validators.required],\r\n      geoData: this.formBuilder.group({\r\n        latitude: [null, Validators.required],\r\n        longitude: [null, Validators.required],\r\n        length: [null, Validators.required],\r\n        width: [null, Validators.required],\r\n        totalArea: '',\r\n        address: [null, Validators.required]\r\n      }),\r\n      preMutationSketch: [null],\r\n      ownerDetails: this.formBuilder.group({\r\n        ownerName: [null, Validators.required],\r\n        gender: [null, Validators.required],\r\n        aadharNo: [null, Validators.required],\r\n        mobileNo: [null, Validators.required],\r\n        emailID: [null, Validators.required],\r\n        address: [null, Validators.required]\r\n\r\n      })\r\n\r\n    });\r\n\r\n  }\r\n  isFieldValid(field: string) {\r\n    return !this.layoutForm.get(field).valid && this.layoutForm.get(field).touched;\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'has-error': this.isFieldValid(field),\r\n      'has-feedback': this.isFieldValid(field)\r\n    };\r\n  }\r\n\r\n\r\n  setGeoCordinates(){\r\n    this.lat = parseFloat(this.layoutForm.get('geoData.latitude').value);\r\n    this.long =parseFloat( this.layoutForm.get('geoData.longitude').value);\r\n  }\r\n  calculateTotalArea(){\r\n    let length =  parseFloat(this.layoutForm.get('geoData.length').value);\r\n    let width =  parseFloat(this.layoutForm.get('geoData.width').value);\r\n    let totalArea = length * width ; \r\n    if(!isNaN(totalArea)){\r\n    console.log(\"Total Area: \" + totalArea);\r\n     this.layoutForm.patchValue({'geoData' : {'totalArea' : totalArea}});\r\n    }\r\n  }\r\n  \r\n  onSubmit() {\r\n    if (this.layoutForm.valid) {\r\n      console.log('form valid success');\r\n      //sync the form model with the data model\r\n      this.landRecord = <LandRecord>this.layoutForm.value;\r\n      this.landRecord.pid =parseInt(this.landRecord.wardNo.toString().substr(0, 3) + this.landRecord.areaCode.toString().substr(0, 3) + this.landRecord.siteNo.toString().substr(0, 3));\r\n      console.log(\"pid generated: \" + this.landRecord.pid);\r\n\r\n      this.manageLandRecordsService.addLandRecordMojani(this.landRecord)\r\n        .subscribe(\r\n        response => {\r\n          console.log(\"res received addLandRecord service\" + JSON.stringify(response));\r\n\r\n          if (response !=null && response.success) {\r\n            //  this.router.navigate(['/success', this.landRecord.pid]);\r\n            this.submitSuccess = true;\r\n          }\r\n        });\r\n    } else {\r\n      this.validateAllFormFields(this.layoutForm);\r\n    }\r\n  }\r\n\r\n  fileChange(event) {\r\n    let fileList: FileList = event.target.files;\r\n    if (fileList.length > 0) {\r\n      let file: File = fileList[0];\r\n      let formData: FormData = new FormData();\r\n      formData.append('uploadFile', file, file.name);\r\n      console.log(\"file :\" + file);\r\n\r\n    }\r\n  }\r\n\r\n  submitNew() {\r\n    this.createForm();\r\n  }\r\n\r\n  validateAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      console.log(field);\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFormFields(control);\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout-application/layout-application.component.ts","module.exports = \".login.alert{\\r\\n  color:red;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div align=\\\"center\\\">\\n    <h3>MOJANI - Login</h3>\\n</div>\\n<div class=\\\"col-md-6 col-md-offset-3\\\">\\n    <form #userlogin = \\\"ngForm\\\" (ngSubmit) = \\\"onSubmit(userlogin)\\\" novalidate>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userlogin.submitted && !username.valid }\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type = \\\"text\\\" class=\\\"form-control\\\" name = \\\"username\\\" [(ngModel)]=\\\"login.username\\\" #username=\\\"ngModel\\\" required>\\n        <div class=\\\"login alert\\\" *ngIf=\\\"userlogin.submitted && !username.valid\\\">Username is required</div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userlogin.submitted && !password.valid }\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type = \\\"password\\\" class=\\\"form-control\\\" name = \\\"password\\\" [(ngModel)]=\\\"login.password\\\" #password=\\\"ngModel\\\" required>\\n        <div class=\\\"login alert\\\"  *ngIf=\\\"userlogin.submitted && !password.valid\\\">Password is required</div>\\n      </div>\\n      <div class=\\\"form-group\\\" align='center'>\\n          <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">Login</button>\\n      </div>\\n      <div *ngIf=\\\"authMessage && authMessage!=''\\\" class=\\\"alert alert-danger\\\" >{{authMessage}}</div>\\n    </form>\\n  </div>\\n\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {LoginAuthenticationService } from '../services/login-authentication.service';\nimport { Router,ActivatedRoute} from '@angular/router';\nimport { Form } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  login: any = {};\n  loading = false;\n  authMessage : string;\n\n  constructor(private loginAuthService : LoginAuthenticationService, private router: Router, private route :ActivatedRoute) {}\n\n  ngOnInit() {\n\n  }\n\n  onSubmit(userlogin : NgForm){\n    if(userlogin.valid){\n        this.loading = true; // validation in progress\n        console.log(this.login);\n        let user = {\"userId\" : this.login.username, \"password\" : this.login.password};\n        this.loginAuthService.authenticateUserLogin (user)\n        .subscribe(\n        response => {\n            this.loading=false;\n            console.log(\"res received authentication service\" + JSON.stringify(response));\n            if (response !=null && response.authSuccess) {\n              this.authMessage=null;\n              //if auth success route according to the role\n              if(response.role == \"Mojani_Surveyor\"){\n                console.log(\"inside mojani survey'\");\n                this.router.navigateByUrl('/layoutApplication');\n              }\n              else if(response.role == \"Mojani_Approver\"){\n                console.log(\"Inside mojani approver\");\n                this.router.navigateByUrl('/approveSurveys');\n              }            \n            }else{\n                this.authMessage = response.message;\n            }\n         });\n     }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","export class LandRecord {\r\n  pid: number;\r\n  wardNo: number;\r\n  areaCode: number;\r\n  siteNo: number;\r\n  geoData: GeoData;\r\n  owner: Owner;\r\n  preMutationSketch: string;\r\n  isMojaniApproved : boolean;\r\n  constructor() { }\r\n\r\n}\r\n\r\nexport class GeoData {\r\n  latitude: number;\r\n  longitude: number;\r\n  length: number;\r\n  width: number;\r\n  totalArea: number;\r\n  address: string;\r\n  constructor() { }\r\n}\r\n\r\nexport class Owner {\r\n  ownerName: string;\r\n  gender: string;\r\n  aadharNo: number;\r\n  mobileNo: number;\r\n  emailID: string;\r\n  address: string;\r\n  constructor() { }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/LandRecord.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class LoginAuthenticationService {\n\n  constructor(private http:Http) { }\n    // API: POST /landRecords/landRecord\n    public authenticateUserLogin(userInfo){\n      console.log(\"Inside authenticateUserLogin function in authentication service\");\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      return this.http.post('/login/api/authentication', JSON.stringify(userInfo), { headers: headers })\n        .map(res => res.json());     \n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/login-authentication.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { LandRecord } from '../models/LandRecord';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class ManageLandRecordsService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  // API: GET /landRecords/:wardNo\r\n  public getLandRecordsMojaniByWard(wardNo: number) : Observable<any> {\r\n    console.log(\"Inside getLandRecordsMojaniByWard method in manageLandRecord service\");\r\n    return this.http.get('/manageLandRecords/api/getLandRecordsMojaniByWard/'+wardNo) \r\n    .map(res => res.json() );\r\n  }\r\n\r\n    // API: GET /landRecords/:pId\r\n  public getLandRecordsMojaniByPid(pId: number) : Observable<any> {\r\n      console.log(\"Inside getLandRecordsMojaniByPid method in manageLandRecord service\");\r\n      return this.http.get('/manageLandRecords/api/getLandRecordsMojaniByPid/'+pId) \r\n      .map(res => res.json() );\r\n  }\r\n\r\n  // API: POST /landRecords/landRecord\r\n  public addLandRecordMojani(landRecord: LandRecord){\r\n    console.log(\"Inside addLandRecordMojani method in manageLandRecord service\");\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('/manageLandRecords/api/addLandRecordMojani', JSON.stringify(landRecord), { headers: headers })\r\n      .map(res => res.json());     \r\n  }\r\n\r\n\r\n    // API: POST /landRecords/landRecord[]\r\n  public updateMojaniApprovedRecords(landRecords: LandRecord[]){\r\n      console.log(\"Inside updateMojaniApprovedRecords method in manageLandRecord service\");\r\n      let headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n      return this.http.post('/manageLandRecords/api/updateMojaniApprovedStatus', JSON.stringify(landRecords), { headers: headers })\r\n        .map(res => res.json());     \r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/managelandrecords.service.ts","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport {LandRecord} from '../models/LandRecord';\n\n@Injectable()\nexport class SurveyDataService {\n\n\n  private sharedData = new BehaviorSubject<LandRecord[]>([]);\n  currentData = this.sharedData.asObservable();\n\n  constructor() { \n    \n  }\n  updateData(records : LandRecord[]) {\n      this.sharedData.next(records);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/survey-data.service.ts","module.exports = \".error-msg {\\n  color: #a94442;\\n}\\n\\n.fix-error-icon {\\n  top: 27px;\\n}\\n\\n.required:after {\\n  content: \\\" *\\\";\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/show-validation-error/show-validation-error.component.css\n// module id = ./src/app/show-validation-error/show-validation-error.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"displayError\\\">\\r\\n  <span class=\\\"glyphicon glyphicon-remove form-control-feedback fix-error-icon\\\"></span>\\r\\n  <span class=\\\"sr-only\\\">(error)</span>\\r\\n  <div class=\\\"error-msg\\\">\\r\\n    {{ errorMsg }}\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/show-validation-error/show-validation-error.component.html\n// module id = ./src/app/show-validation-error/show-validation-error.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-show-validation-error',\n  templateUrl: './show-validation-error.component.html',\n  styleUrls: ['./show-validation-error.component.css']\n})\nexport class ShowValidationErrorComponent implements OnInit {\n  @Input() errorMsg: string;\n  @Input() displayError: boolean;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/show-validation-error/show-validation-error.component.ts","module.exports = \"/*add css here */\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/view-land-record/view-land-record.component.css\n// module id = ./src/app/view-land-record/view-land-record.component.css\n// module chunks = main","module.exports = \"<div  align=\\\"center\\\">\\n  <h3>MOJANI - View Application for Land Survey</h3>\\n</div>\\n\\n<div class=\\\"applicationForm\\\">\\n  <form class=\\\"form-horizontal\\\" [formGroup]=\\\"layoutForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <fieldset disabled>\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Land Details</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('wardNo')\\\">\\n            <label for=\\\"wardNo\\\" class=\\\"control-label required\\\">Ward #</label>\\n            <input type=\\\"text\\\" id=\\\"wardNo\\\" class=\\\"form-control\\\" formControlName=\\\"wardNo\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('wardNo')\\\" errorMsg=\\\"Ward # is mandatory\\\"></app-show-validation-error>\\n          </div>\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('areaCode')\\\">\\n            <label for=\\\"areaCode\\\" class=\\\"control-label required\\\">Area Code</label>\\n            <input type=\\\"text\\\" id=\\\"areaCode\\\" class=\\\"form-control\\\" formControlName=\\\"areaCode\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('areaCode')\\\" errorMsg=\\\"Area code is mandatory\\\"></app-show-validation-error>\\n          </div>\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('siteNo')\\\">\\n            <label for=\\\"siteNo\\\" class=\\\"control-label required\\\">Plot/Site #</label>\\n            <input type=\\\"text\\\" id=\\\"siteNo\\\" class=\\\"form-control\\\" formControlName=\\\"siteNo\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('siteNo')\\\" errorMsg=\\\"Plot/Site # is mandatory\\\"></app-show-validation-error>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Geographic Data</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div formGroupName=\\\"geoData\\\">\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.latitude')\\\">\\n              <label for=\\\"latitude\\\" class=\\\"control-label required\\\">Latitude</label>\\n              <input type=\\\"text\\\" id=\\\"latitude\\\" class=\\\"form-control\\\" formControlName=\\\"latitude\\\" (change)=\\\"setGeoCordinates()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.latitude')\\\" errorMsg=\\\"Latitude is mandatory\\\"></app-show-validation-error>\\n            </div>\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.longitude')\\\">\\n              <label for=\\\"Longitude\\\" class=\\\"control-label required\\\">Longitude</label>\\n              <input type=\\\"text\\\" id=\\\"longitude\\\" class=\\\"form-control\\\" formControlName=\\\"longitude\\\" (change)=\\\"setGeoCordinates()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.longitude')\\\" errorMsg=\\\"Longitude is mandatory\\\"></app-show-validation-error>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.length')\\\">\\n              <label for=\\\"length\\\" class=\\\"control-label required\\\">Plot Length (ft.)</label>\\n              <input type=\\\"text\\\" id=\\\"length\\\" class=\\\"form-control\\\" formControlName=\\\"length\\\" (change) = \\\"calculateTotalArea()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.length')\\\" errorMsg=\\\"Plot length is mandatory\\\"></app-show-validation-error>\\n            </div>\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.width')\\\">\\n              <label for=\\\"width\\\" class=\\\"control-label required\\\">Plot Width (ft.)</label>\\n              <input type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\" formControlName=\\\"width\\\" (change) = \\\"calculateTotalArea()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.width')\\\" errorMsg=\\\"Plot width is mandatory\\\"></app-show-validation-error>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <label for=\\\"width\\\" class=\\\"control-label\\\">Total Plot Area (sq. ft.)</label>\\n              <input type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\" formControlName=\\\"totalArea\\\" readonly />\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-12\\\" [ngClass]=\\\"displayFieldCss('geoData.address')\\\">\\n              <label for=\\\"address\\\" class=\\\"control-label required\\\">Property Address</label>\\n              <input type=\\\"text\\\" id=\\\"address\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.address')\\\" errorMsg=\\\"Plot address is mandatory\\\"></app-show-validation-error>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\" *ngIf=\\\"lat && long\\\">\\n          <app-gmaps [lat]=\\\"lat\\\"  [lng]=\\\"long\\\"></app-gmaps>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Upload Land Sketch</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('preMutationSketch')\\\">\\n            <label for=\\\"sketch\\\" class=\\\"control-label required\\\">Property Sketch</label>\\n            <input type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" placeholder=\\\"Upload file\\\" accept=\\\"image/*\\\" id=\\\"sketch\\\" formControlName=\\\"preMutationSketch\\\">\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('preMutationSketch')\\\" errorMsg=\\\"Premutation sketch is mandatory\\\"></app-show-validation-error>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Land Allottee Details</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div formGroupName=\\\"ownerDetails\\\">\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.ownerName')\\\">\\n              <label for=\\\"ownerName\\\" class=\\\"control-label required\\\">Allottee Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ownerName\\\" formControlName=\\\"ownerName\\\">\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.ownerName')\\\" errorMsg=\\\"Property allotee Name is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.aadharNo')\\\">\\n              <label for=\\\"aadharNo\\\" class=\\\"control-label required\\\">Aadhar #</label>\\n              <input type=\\\"text\\\" id=\\\"aadharNo\\\" class=\\\"form-control\\\" formControlName=\\\"aadharNo\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.aadharNo')\\\" errorMsg=\\\"Aadhar # is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.gender')\\\">\\n             <div> <label class=\\\"control-label required\\\">Gender</label></div>\\n              <label class=\\\"md-check radio-inline\\\">\\n                <input type=\\\"radio\\\" value=\\\"M\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">Male\\n              </label>\\n              <label class=\\\"md-check radio-inline\\\">\\n                <input type=\\\"radio\\\" value=\\\"F\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">Female\\n              </label>\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.gender')\\\" errorMsg=\\\"Gender is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.mobileNo')\\\">\\n                  <label for=\\\"mobileNo\\\" class=\\\"control-label required\\\">Mobile</label>\\n                  <input type=\\\"text\\\" id=\\\"mobileNo\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNo\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.mobileNo')\\\" errorMsg=\\\"Mobile number is mandatory\\\"></app-show-validation-error>\\n                </div>\\n                <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.emailID')\\\">\\n                  <label for=\\\"emailID\\\" class=\\\"control-label required\\\">Email ID</label>\\n                  <input type=\\\"text\\\" id=\\\"emailID\\\" class=\\\"form-control\\\" formControlName=\\\"emailID\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.emailID')\\\" errorMsg=\\\"Email ID is mandatory\\\"></app-show-validation-error>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-12\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.address')\\\">\\n                  <label for=\\\"ownerAddress\\\" class=\\\"control-label required\\\">Allottee Address</label>\\n                  <input type=\\\"text\\\" id=\\\"ownerAddress\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.address')\\\" errorMsg=\\\"Allotee address is mandatory\\\"></app-show-validation-error>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n    </div>\\n  </fieldset>\\n  <div align=\\\"right\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Back</button>\\n    </div>\\n  </form>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/view-land-record/view-land-record.component.html\n// module id = ./src/app/view-land-record/view-land-record.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { ActivatedRoute, Params , Router} from '@angular/router'; \nimport { Location } from '@angular/common';\n\nimport { ManageLandRecordsService } from '../services/managelandrecords.service';\nimport { LandRecord } from '../models/LandRecord';\nimport 'rxjs/add/operator/switchMap'; \n\n@Component({\n  selector: 'app-viewlandrecord',\n  templateUrl: './view-land-record.component.html',\n  styleUrls: ['./view-land-record.component.css']\n})\nexport class ViewlandrecordComponent implements OnInit {\n\n  layoutForm: FormGroup;\n  landRecord: LandRecord = new LandRecord(); //initialize land record object\n  submitSuccess: boolean = false;\n  lat :number;\n  long : number; \n constructor(private formBuilder: FormBuilder,private location: Location, private manageLandRecordsService: ManageLandRecordsService, private router: Router,private route: ActivatedRoute) { }\n  ngOnInit() {\n    this.loadForm();\n  }\n\n  loadForm() {\n    this.submitSuccess = false;\n    this.lat=null;\n    this.long = null;\n    this.layoutForm = this.formBuilder.group({\n      pid: [''],\n      wardNo: [null],\n      areaCode: [null,],\n      siteNo: [null,],\n      geoData: this.formBuilder.group({\n        latitude: [null],\n        longitude: [null],\n        length: [null],\n        width: [null],\n        totalArea: '',\n        address: [null]\n      }),\n      preMutationSketch: [null],\n      ownerDetails: this.formBuilder.group({\n        ownerName: [null],\n        gender:[null],\n        aadharNo: [null],\n        mobileNo: [null],\n        emailID:[null],\n        address: [null]\n      })\n\n    });\n    this.route.params\n          .switchMap((params: Params) => this.manageLandRecordsService.getLandRecordsMojaniByPid(+params['id']))\n          .subscribe(\n            response => {\n              console.log(\"res received getLandRecordbyPid service\" + JSON.stringify(response));\n              if (response !=null && response.success) {\n                this.landRecord =<LandRecord> response.landRecords; \n                console.log(\"landRecord object received:\" + this.landRecord);\n                this.layoutForm.patchValue(this.landRecord);\n                this.setGeoCordinates();\n              }\n              }); \n\n  }\n\n  onSubmit(){\n    this.location.back();\n\n  }\n  isFieldValid(field: string) {\n    return !this.layoutForm.get(field).valid && this.layoutForm.get(field).touched;\n  }\n\n  displayFieldCss(field: string) {\n    return {\n      'has-error': this.isFieldValid(field),\n      'has-feedback': this.isFieldValid(field)\n    };\n  }\n\n\n  setGeoCordinates(){\n    this.lat = parseFloat(this.layoutForm.get('geoData.latitude').value);\n    this.long =parseFloat( this.layoutForm.get('geoData.longitude').value);\n  }\n  calculateTotalArea(){\n    let length =  parseFloat(this.layoutForm.get('geoData.length').value);\n    let width =  parseFloat(this.layoutForm.get('geoData.width').value);\n    let totalArea = length * width ; \n    if(!isNaN(totalArea)){\n    console.log(\"Total Area: \" + totalArea);\n     this.layoutForm.patchValue({'geoData' : {'totalArea' : totalArea}});\n    }\n  }\n  \n\n  fileChange(event) {\n    let fileList: FileList = event.target.files;\n    if (fileList.length > 0) {\n      let file: File = fileList[0];\n      let formData: FormData = new FormData();\n      formData.append('uploadFile', file, file.name);\n      console.log(\"file :\" + file);\n\n    }\n  }\n\n  validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      console.log(field);\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/view-land-record/view-land-record.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}